@page "/restaurant/edit/{Id:int}"
@using RestaurantApp.Blazor.Models.DTO
@using RestaurantApp.Shared.Models
@using RestaurantApp.Blazor.Components
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="edit-container">

    @if (restaurant == null)
    {
        <div class="loading-container">
            <div class="spinner"></div>
            <p>Loading...</p>
        </div>
    }
    else
    {
        <RestaurantHeader restaurant=@restaurant/>
        <div class="bg-light border-bottom sticky-top">
            <div class="container">
                <ul class="nav nav-tabs border-0 pt-2" role="tablist">
                    <li class="nav-item">
                        <button class="nav-link @(activeTab == "basic" ? "active" : "") px-4 py-3 border-0 rounded-top"
                                @onclick="@(() => activeTab = "basic")"
                                type="button">
                            <i class="bi bi-info-circle me-2"></i>
                            Basic Info
                        </button>
                    </li>
                    <li class="nav-item">
                        <button class="nav-link @(activeTab == "tables" ? "active" : "") px-4 py-3 border-0 rounded-top"
                                @onclick="@(() => activeTab = "tables")"
                                type="button">
                            <i class="bi bi-grid-3x3-gap me-2"></i>
                            Tables
                        </button>
                    </li>
                    <li class="nav-item">
                        <button
                            class="nav-link @(activeTab == "settings" ? "active" : "") px-4 py-3 border-0 rounded-top"
                            @onclick="@(() => activeTab = "settings")"
                            type="button">
                            <i class="bi bi-gear"></i>
                            Settings
                        </button>
                    </li>
                    <li class="nav-item">
                        <button
                            class="nav-link @(activeTab == "employees" ? "active" : "") px-4 py-3 border-0 rounded-top"
                            @onclick="@(() => activeTab = "employees")"
                            type="button">
                            <i class="bi bi-people"></i>
                            Employees
                        </button>
                    </li>
                    <li class="nav-item">
                        <button
                            class="nav-link @(activeTab == "menu" ? "active" : "") px-4 py-3 border-0 rounded-top"
                            @onclick="@(() => activeTab = "menu")"
                            type="button">
                            <i class="bi bi-book me-2"></i>
                            Menu
                        </button>
                    </li>
                    <li class="nav-item">
                        <button
                            class="nav-link @(activeTab == "appearance" ? "active" : "") px-4 py-3 border-0 rounded-top"
                            @onclick="@(() => activeTab = "appearance")"
                            type="button">
                            <i class="bi bi-stars"></i>
                            Appearance
                        </button>
                    </li>

                </ul>
            </div>
        </div>

        <div class="container my-4">
            <div class="tab-content">
                @switch (activeTab)
                {
                    case "basic":
                        <BasicInfoTab Id=@Id restaurant=@restaurant/>
                        break;
                    case "tables":
                        <TablesTab Id=@Id restaurant=@restaurant/>
                        break;
                    case "settings":
                        <RestaurantSettingsTab Id=@Id restaurant=@restaurant/>
                        break;
                    case "employees":
                        <RestaurantEmployeesTab Id=@Id restaurant=@restaurant/>
                        break;
                    case "menu":
                        <MenuTab Id=@Id restaurant=@restaurant/>
                        break;
                    case "appearance":
                        <AppearanceTab Id=@Id restaurant=@restaurant/>
                        break;
                }
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public int Id { get; set; }
    private Restaurant? restaurant;
    private bool isLoading = true;
    string activeTab = "basic";

    protected override async Task OnInitializedAsync()
    {
        await LoadRestaurant();
    }

    private async Task LoadRestaurant()
    {
        try
        {
            restaurant = await Http.GetFromJsonAsync<Restaurant>($"api/restaurant/{Id}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading restaurant: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

}
