@using RestaurantApp.Blazor.Extensions
@using RestaurantApp.Blazor.Models.DTO
@using RestaurantApp.Shared.Models
@inject HttpClient Http

@if (restaurant != null)
{
    <div class="container mt-4">
        <div class="row justify-content-evenly">
            <div class="col-lg-8 col-12 w-100">
                <div>
                    <div class="text-center w-100">
                        <h3 class="mb-3">Change basic information regarding restaurant</h3>
                    </div>


                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="name" class="form-label">
                                Restaurant name <span class="text-danger">*</span>
                            </label>
                            <input type="text"
                                   class="form-control"
                                   id="name"
                                   @bind="modifiedRestaurant.Name"
                                   @bind:after="() => changesMade = true"
                                   required/>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label for="phone" class="form-label">
                                Restaurant Address: <span class="text-danger">*</span>
                            </label>
                            <input type="tel"
                                   class="form-control"
                                   id="address"
                                   @bind="modifiedRestaurant.Address"
                                   @bind:after="() => changesMade = true"
                                   required/>
                        </div>


                    </div>


                </div>

                <div class="col mb-3">
                    <label for="description" class="form-label">
                        Restaurant description: <span class="text-danger">*</span>
                    </label>
                    <textarea
                            class="form-control"
                            id="description"
                            rows="4"
                            @bind="modifiedRestaurant.Description"
                            @bind:after="() => changesMade = true">
                        </textarea>
                </div>

                @if (changesMade)
                {
                    <div class="row justify-content-center mb-3">
                        <div class="d-flex justify-content-center gap-3">
                            <button class="base-button" @onclick="SaveChanges">Save Changes</button>
                            <button class="grey-button" @onclick="CancelChanges">Cancel</button>
                        </div>
                    </div>
                }

                <!-- Customer Information Section -->
                <h4 class="mb-3 text-center">Opening hours</h4>

                <OpeningHoursTab Id=@Id restaurant=@restaurant/>



                <!-- Messages Section -->
                @* @if (!string.IsNullOrEmpty(errorMessage)) *@
                @* { *@
                @*     <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert"> *@
                @*         <i class="bi bi-x-circle-fill me-2"></i> *@
                @*         <strong>Error!</strong> @errorMessage *@
                @*         <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button> *@
                @*     </div> *@
                @* } *@
                @* *@
                @* @if (!string.IsNullOrEmpty(successMessage)) *@
                @* { *@
                @*     <div class="alert alert-success alert-dismissible fade show mt-3" role="alert"> *@
                @*         <i class="bi bi-check-circle-fill me-2"></i> *@
                @*         <strong>Success!</strong> @successMessage *@
                @*         <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button> *@
                @*     </div> *@
                @* } *@
            </div>
        </div>
    </div>


    @* <div class="edit-content"> *@
    @*     <!-- Sekcja podstawowych informacji --> *@
    @*     <div class="edit-card"> *@
    @*         <h3 class="section-title">Basic informations</h3> *@
    @*         <div class="form-group"> *@
    @*             <label class="form-label">Restaurant name</label> *@
    @*             <input type="text" class="form-input" *@
    @*                    @bind="restaurant.Name" *@
    @*                    @bind:after="() => changesMade = true"/> *@
    @*         </div> *@
    @*         <div class="form-group"> *@
    @*             <label class="form-label">Address</label> *@
    @*             <input type="text" class="form-input" *@
    @*                    @bind="restaurant.Address" *@
    @*                    @bind:after="() => changesMade = true"/> *@
    @*         </div> *@
    @*     </div> *@
    @* </div> *@
    @* @if (changesMade) *@
    @* { *@
    @*     <div class="action-buttons"> *@
    @*         <button @onclick="CancelChanges">Cancel</button> *@
    @*         <button @onclick="SaveChanges"> *@
    @*             Save Changes *@
    @*         </button> *@
    @*     </div> *@
    @* } *@
}
else
{
    <div class="loading-container">
        <div class="spinner"></div>
        <p>Loading...</p>
    </div>
}

@code {
    [Parameter] public int Id { get; set; }
    [Parameter] public required Restaurant restaurant { get; set; }
    private Restaurant modifiedRestaurant = new Restaurant();
    private bool changesMade = false;

    protected override void OnParametersSet()
    {
        if (restaurant != null)
        {
            modifiedRestaurant = restaurant;
        }
    }

    private void CancelChanges()
    {
        modifiedRestaurant = restaurant;
    }

    private async Task SaveChanges()
    {
        try
        {
            await Http.RequestWithHeaderAsync(HttpMethod.Patch, $"api/restaurant/{Id}/name", modifiedRestaurant.Name, "X-Restaurant-Id", Id.ToString());
            await Http.RequestWithHeaderAsync(HttpMethod.Patch, $"api/restaurant/{Id}/address", modifiedRestaurant.Address, "X-Restaurant-Id", Id.ToString());

            changesMade = false;
        }
        catch (Exception e)
        {
            Console.WriteLine($"Error saving data: {e.Message}");
        }
    }

}
