@using RestaurantApp.Blazor.Models.DTO
@using RestaurantApp.Shared.DTOs
@using RestaurantApp.Shared.Models
@using RestaurantApp.Blazor.Components
@inject HttpClient Http

<div class="container ">
    <div class="row justify-content-evenly">
        <h3 class="text-center mb-3">Configure tables</h3>

        <div class="tables-grid mb-3">
            @if (loadedTables != null && loadedTables.Any())
            {
                <div class="row g-3">
                    @foreach (var table in loadedTables)
                    {
                        <div class="col-12 col-sm-6 col-md-4 col-lg-3"
                             @onclick="() => { editingTable = table; showTableModal = true; }">
                            <TableComponent Table="table"/>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="">
                    <p>No tables configured please add some</p>
                </div>
            }
        </div>
        <div class="row mb-4 justify-content-center ">
            <button class="base-button w-25" @onclick="() => { editingTable = null; showTableModal = true; }">
                <i class="bi bi-plus-circle me-2"></i> Add new table
            </button>
        </div>

        <EditTableModal Table="editingTable"
                        RestaurantId="Id"
                        OnSave="LoadTables"
                        @bind-IsVisible="showTableModal"/>
    </div>
</div>


@code {
    [Parameter] public int Id { get; set; }
    [Parameter] public Restaurant? restaurant { get; set; }
    private List<Table> loadedTables = new();
    private Table? editingTable = null;
    private int? editingTableId = null;
    private bool showAddTable = false;
    private bool changesMade = false;
    private bool showTableModal = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadTables();
    }

    private async Task LoadTables()
    {
        try
        {
            loadedTables = await Http.GetFromJsonAsync<List<Table>>($"api/Table/restaurant/{Id}");
            if (loadedTables == null)
            {
                loadedTables = new List<Table>();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading tables: {ex.Message}");
        }
    }

}