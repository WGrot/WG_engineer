@page "/booking/table/{restaurantId:int}"
@using RestaurantApp.Shared.Models
@using System.Net.Http.Json
@using RestaurantApp.Blazor.Models.DTO
@using RestaurantApp.Shared.DTOs
@using RestaurantApp.Blazor.Pages.RestaurantDetails
@using RestaurantApp.Blazor.Components
@using RestaurantApp.Blazor.Services
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="booking-container">
    @if (isLoadingRestaurant)
    {
        <div class="loading-container">
            <div class="spinner"></div>
            <p>Loading...</p>
        </div>
    }
    else if (restaurant == null)
    {
        <div class="error">
            <h2>Restaurant not found</h2>
            <button @onclick="GoBack">Go Back</button>
        </div>
    }
    else
    {
        <div class="restaurant-header bg-primary text-white">
            <div class="container py-4">
                <div class="row align-items-center">
                    <div class="col-auto">
                        @if (!string.IsNullOrEmpty(restaurant.profileThumbnailUrl))
                        {
                            <img src="@restaurant.profileThumbnailUrl"
                                 alt="@restaurant.Name"
                                 class="restaurant-logo rounded shadow-sm"
                                 @onclick="GoBack">
                        }
                        else
                        {
                            <div
                                class="restaurant-logo-placeholder rounded shadow-sm d-flex align-items-center justify-content-center bg-white text-primary">
                                <i class="bi bi-shop fs-1"></i>
                            </div>
                        }
                    </div>
                    <div class="col-auto">
                        <StarRating
                            Restaurant="restaurant"/>
                        <h1 class="h2 mb-1">@restaurant.Name</h1>
                        <p class="mb-0 opacity-75">
                            <i class="bi bi-geo-alt-fill me-1"></i>
                            @restaurant.Address
                        </p>
                    </div>
                    <div class="col-auto ms-1">
                        <button class="base-button lg" @onclick="GoBack">
                            Back to restaurant
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <TableBookingForm
            Id = "@RestaurantId"
            restaurant="@restaurant"/>
    }
</div>



@code {
    [Parameter] public int RestaurantId { get; set; }
    [Inject] public JwtAuthenticationStateProvider AuthStateProvider { get; set; } = default!;
    private Restaurant? restaurant;
    private bool isLoadingRestaurant = false;

    
    protected override async Task OnInitializedAsync()
    {
        await LoadRestaurantData();
    }

    private async Task LoadRestaurantData()
    {
        try
        {
            isLoadingRestaurant = true;
            restaurant = await Http.GetFromJsonAsync<Restaurant>($"api/Restaurant/{RestaurantId}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading restaurant data: {ex.Message}");
            restaurant = null;
        }
        finally
        {
            isLoadingRestaurant = false;
        }
    }
    

    private void GoBack()
    {
        Navigation.NavigateTo($"/restaurant/{RestaurantId}");
    }

}

