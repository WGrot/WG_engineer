@page "/restaurant/{id:int}"
@using RestaurantApp.Shared.Models
@using System.Net.Http.Json
@using RestaurantApp.Blazor.Components
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="container-fluid p-0">
    @if (restaurant == null)
    {
        <div class="d-flex justify-content-center align-items-center min-vh-100">
            <div class="text-center">
                <div class="spinner-border text-primary mb-3" role="status">
                    <span class="visually-hidden">Ładowanie...</span>
                </div>
                <p class="text-muted">Ładowanie danych restauracji...</p>
            </div>
        </div>
    }
    else
    {
        <!-- Header with restaurant branding -->
        <div class="restaurant-header bg-primary text-white">
            <div class="container py-4">
                <div class="row align-items-center">
                    <div class="col-auto">
                        @if (!string.IsNullOrEmpty(restaurant.profileThumbnailUrl))
                        {
                            <img src="@restaurant.profileThumbnailUrl"
                                 alt="@restaurant.Name"
                                 class="restaurant-logo rounded shadow-sm">
                        }
                        else
                        {
                            <div
                                class="restaurant-logo-placeholder rounded shadow-sm d-flex align-items-center justify-content-center bg-white text-primary">
                                <i class="bi bi-shop fs-1"></i>
                            </div>
                        }
                    </div>
                    <div class="col-auto">
                        <StarRating
                            Restaurant="restaurant"/>
                        <h1 class="h2 mb-1">@restaurant.Name</h1>
                        <p class="mb-0 opacity-75">
                            <i class="bi bi-geo-alt-fill me-1"></i>
                            @restaurant.Address
                        </p>
                    </div>
                    <div class="col-auto ms-1">
                        <button class="base-button lg" @onclick="BookTable">
                            Book Table
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Navigation Tabs -->
        <div class="bg-light border-bottom sticky-top">
            <div class="container">
                <ul class="nav nav-tabs border-0 pt-2" role="tablist">
                    <li class="nav-item">
                        <button class="nav-link @(activeTab == "info" ? "active" : "") px-4 py-3 border-0 rounded-top"
                                @onclick="@(() => activeTab = "info")"
                                type="button">
                            <i class="bi bi-info-circle me-2"></i>
                            Info
                        </button>
                    </li>
                    <li class="nav-item">
                        <button class="nav-link @(activeTab == "menu" ? "active" : "") px-4 py-3 border-0 rounded-top"
                                @onclick="@(() => activeTab = "menu")"
                                type="button">
                            <i class="bi bi-book me-2"></i>
                            Menu
                        </button>
                    </li>
                    <li class="nav-item">
                        <button class="nav-link @(activeTab == "tables" ? "active" : "") px-4 py-3 border-0 rounded-top"
                                @onclick="@(() => activeTab = "tables")"
                                type="button">
                            <i class="bi bi-calendar-check me-2"></i>
                            Tables
                        </button>
                    </li>
                    <li class="nav-item">
                        <button
                            class="nav-link @(activeTab == "reviews" ? "active" : "") px-4 py-3 border-0 rounded-top"
                            @onclick="@(() => activeTab = "reviews")"
                            type="button">
                            <i class="bi bi-star-half me-2"></i>
                            Reviews
                        </button>
                    </li>
                </ul>
            </div>
        </div>

        <!-- Tab Content -->
        <div class="container my-4">
            <div class="tab-content">
                @switch (activeTab)
                {
                    case "info":
                        <div class="tab-pane fade show active">
                            <RestaurantInfoTab Id=@Id restaurant=@restaurant/>
                        </div>
                        break;
                    case "menu":
                        <div class="tab-pane fade show active">
                            <RestaurantMenuTab Id=@Id restaurant=@restaurant/>
                        </div>
                        break;
                    case "tables":
                        <div class="tab-pane fade show active">
                            <RestaurantTablesTab Id=@Id restaurant=@restaurant/>
                        </div>
                        break;
                    case "reviews":
                        <div class="tab-pane fade show active">
                            <RestaurantReviewsTab Id=@Id restaurant=@restaurant/>
                        </div>
                        break;
                }
            </div>
        </div>
    }
</div>


@code {
    [Parameter] public int Id { get; set; }

    string activeTab = "info";

    private Restaurant? restaurant;
    private List<Table>? tables;
    private Menu? menu;
    private bool isLoading = false;
    private bool isLoadingTables = false;
    private bool isLoadingMenu = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadRestaurant();
    }

    private async Task LoadRestaurant()
    {
        try
        {
            isLoading = true;
            restaurant = await Http.GetFromJsonAsync<Restaurant>($"api/Restaurant/{Id}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading restaurant: {ex.Message}");
            restaurant = null;
        }
        finally
        {
            isLoading = false;
        }
    }

    private void BookTable()
    {
        Navigation.NavigateTo($"/booking/table/{Id}");
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/restaurants");
    }

}