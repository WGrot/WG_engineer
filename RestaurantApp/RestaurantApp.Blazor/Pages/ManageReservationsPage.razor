@page "/manage-reservations"
@using RestaurantApp.Shared.Models
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Authorization
@using RestaurantApp.Blazor.Extensions
@using RestaurantApp.Blazor.Models.DTO
@using RestaurantApp.Blazor.Components
@attribute [Authorize]

<h3>ManageReservationsPage</h3>

@if (isLoading)
{
    <p>Loading reservations...</p>
}
else if (reservations == null )
{
    <p>You don't have any reservations yet.</p>
}
else
{
    <div>
        <input type="text"
               class="search-input"
               placeholder="Customer name"
               @bind="searchParameters.CustomerName"
               @bind:event="oninput"/>

        <input type="text"
               class="search-input"
               placeholder="Customer email"
               @bind="searchParameters.CustomerEmail"
               @bind:event="oninput"/>

        <input type="text"
               class="search-input"
               placeholder="Customer phone"
               @bind="searchParameters.CustomerPhone"
               @bind:event="oninput"/>


        <label for="date">Select Date:</label>
        <input type="date" id="date" @bind="searchParameters.ReservationDate" @bind:event="oninput"/>


        <label for="startTime">Start Time:</label>
        <input type="time" id="startTime" @bind="searchParameters.ReservationDateFrom" @bind:event="oninput"/>


        <label for="endTime">End Time:</label>
        <input type="time" id="endTime" @bind="searchParameters.ReservationDateTo" @bind:event="oninput"/>
        
        <button class="btn btn-success"
                @onclick="() => LoadReservations()">Filter
        </button>
        <button class="btn btn-secondary"
                @onclick="() => ClearParams()">Clear Filters
        </button>

    </div>
    <ul>
        @foreach (var reservation in reservations.OrderByDescending(r => r.ReservationDate))
        {
            <li>
                <div>
                    <strong>@reservation.Restaurant?.Name</strong><br/>
                    Customer: @reservation.CustomerName (@reservation.CustomerEmail, @reservation.CustomerPhone)<br/>
                    Date: @reservation.ReservationDate.ToLocalTime().ToString("yyyy-MM-dd")<br/>
                    Time: @reservation.StartTime.ToString("HH:mm") - @reservation.EndTime.ToString("HH:mm")<br/>
                    Address: @reservation.Restaurant?.Address<br/>
                    Status: @reservation.Status<br/>
                    Guests: @reservation.NumberOfGuests
                    @if (reservation is TableReservation)
                    {
                        <div>
                            table number: @(reservation as TableReservation)?.TableNumber
                        </div>
                    }
                    @if (reservation.Status == ReservationStatus.Pending)
                    {
                        <button class="btn btn-success"
                                @onclick="() => ApproveReservation(reservation.Id, reservation.RestaurantId)">Approve
                        </button>
                        
                    }
                    
                    <button class="btn btn-outline-secondary"
                            @onclick="() => OpenReservationModal(reservation)">...
                    </button>
                </div>
                <hr/>
            </li>
        }
    </ul>
    
    <!-- Modal dla opcji rezerwacji -->
<GenericModal @bind-IsVisible="showReservationModal" 
                Title="Manage Reservation"
                Size="GenericModal.ModalSize.Default">
    <ChildContent>
        @if (selectedReservation != null)
        {
            <div class="reservation-details mb-4">
                <h6>Reservation Details:</h6>
                <p class="mb-1"><strong>Customer:</strong> @selectedReservation.CustomerName</p>
                <p class="mb-1"><strong>Email:</strong> @selectedReservation.CustomerEmail</p>
                <p class="mb-1"><strong>Phone:</strong> @selectedReservation.CustomerPhone</p>
                <p class="mb-1"><strong>Date:</strong> @selectedReservation.ReservationDate.ToLocalTime().ToString("yyyy-MM-dd")</p>
                <p class="mb-1"><strong>Time:</strong> @selectedReservation.StartTime.ToString("HH:mm") - @selectedReservation.EndTime.ToString("HH:mm")</p>
                <p class="mb-1"><strong>Guests:</strong> @selectedReservation.NumberOfGuests</p>
                <p class="mb-1"><strong>Current Status:</strong> <span class="badge bg-info">@selectedReservation.Status</span></p>
            </div>

            <div class="form-group mb-3">
                <label for="statusSelect" class="form-label">Change Status:</label>
                <select id="statusSelect" class="form-select" @bind="selectedStatus">
                    <option value="">-- Select Status --</option>
                    @foreach (var status in Enum.GetValues<ReservationStatus>())
                    {
                        <option value="@status">@status</option>
                    }
                </select>
            </div>

            @if (!string.IsNullOrEmpty(modalError))
            {
                <div class="alert alert-danger" role="alert">
                    @modalError
                </div>
            }

            @if (!string.IsNullOrEmpty(modalSuccess))
            {
                <div class="alert alert-success" role="alert">
                    @modalSuccess
                </div>
            }
        }
    </ChildContent>
    <FooterContent>
        <button class="btn btn-primary" 
                @onclick="UpdateReservationStatus"
                disabled="@(selectedStatus == null || isProcessing)">
            @if (isProcessing)
            {
                <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
            }
            Update Status
        </button>
        <button class="btn btn-danger" 
                @onclick="ShowDeleteConfirmation"
                disabled="@isProcessing">
            Delete Reservation
        </button>
        <button class="btn btn-secondary" @onclick="CloseModal">Cancel</button>
    </FooterContent>
</GenericModal>

<!-- Modal potwierdzenia usunięcia -->
<GenericModal @bind-IsVisible="showDeleteConfirmation" 
                Title="Confirm Deletion"
                Size="GenericModal.ModalSize.Small">
    <ChildContent>
        <p>Are you sure you want to delete this reservation?</p>
        <p class="text-danger"><strong>This action cannot be undone!</strong></p>
    </ChildContent>
    <FooterContent>
        <button class="btn btn-danger" 
                @onclick="DeleteReservation"
                disabled="@isProcessing">
            @if (isProcessing)
            {
                <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
            }
            Yes, Delete
        </button>
        <button class="btn btn-secondary" @onclick="() => showDeleteConfirmation = false">Cancel</button>
    </FooterContent>
</GenericModal>
}


