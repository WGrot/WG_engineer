@page "/TestAuth"
@using RestaurantApp.Blazor.Models.DTO
@using Services
@inject HttpClient Http
@inject AuthService AuthService

<h3>Test Autoryzacji</h3>

@if (_isAuthenticated)
{
    <div class="alert alert-success">
        <p>Jesteś zalogowany jako: @_currentUser?.Email</p>
    </div>

    <button class="btn btn-primary" @onclick="TestApiCall">Testuj wywołanie API</button>

    @if (!string.IsNullOrEmpty(_apiResponse))
    {
        <div class="mt-3 alert alert-info">
            <pre>@_apiResponse</pre>
        </div>
    }
}
else
{
    <div class="alert alert-warning">
        Nie jesteś zalogowany. <a href="/login">Zaloguj się</a>
    </div>
}

@code {
    private bool _isAuthenticated;
    private UserDto? _currentUser;
    private string _apiResponse = "";

    protected override async Task OnInitializedAsync()
    {
        _isAuthenticated = await AuthService.IsAuthenticatedAsync();
        if (_isAuthenticated)
        {
            _currentUser = await AuthService.GetCurrentUserAsync();
        }
    }

    private async Task TestApiCall()
    {
        try
        {
            // To wywołanie automatycznie doda token Bearer
            var response = await Http.GetAsync("api/auth/me");
            _apiResponse = await response.Content.ReadAsStringAsync();
        }
        catch (Exception ex)
        {
            _apiResponse = $"Błąd: {ex.Message}";
        }
    }
}